<!-- collection-sidebar.component.html -->
<div class="sidebar-wrapper flex h-full">
  <!-- Main Sidebar Container -->
  <div class="sidebar-container bg-gray-50 h-full overflow-auto border-r border-gray-200 flex flex-col"
       [style.width.px]="collapsed() ? 64 : sidebarWidth">
    
    <!-- Sidebar Header -->
    <div class="flex items-center justify-between p-3 border-b border-gray-200">
      <h2 class="font-medium text-gray-800 truncate" [class.hidden]="collapsed()">Collections</h2>
      <div class="flex items-center" [class.hidden]="collapsed()">
        <button class="text-gray-500 hover:text-gray-700 p-1 rounded-md hover:bg-gray-200 mr-1" 
                title="Import Collection"
                (click)="triggerImportDialog('json')">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
          </svg>
        </button>
        <button class="text-gray-500 hover:text-gray-700 p-1 rounded-md hover:bg-gray-200 mr-1" 
                title="Import from OpenAPI"
                (click)="triggerImportDialog('openapi')">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
        </button>
        <button class="text-gray-500 hover:text-gray-700 p-1 rounded-md hover:bg-gray-200 mr-1" 
                title="Export Collection"
                (click)="exportCollection()">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
          </svg>
        </button>
        <button class="text-gray-500 hover:text-gray-700 p-1 rounded-md hover:bg-gray-200" 
                title="Collapse Sidebar"
                (click)="toggleSidebar()">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19l-7-7 7-7m8 14l-7-7 7-7" />
          </svg>
        </button>
      </div>
      <button *ngIf="collapsed()" class="text-gray-500 hover:text-gray-700 p-1 rounded-md hover:bg-gray-200" 
              (click)="toggleSidebar()"
              title="Expand Sidebar">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
        </svg>
      </button>
    </div>
    
    <!-- Tree Structure -->
    <div class="flex-1 overflow-y-auto">
      <ng-container *ngIf="!collapsed()">
        <ng-container *ngTemplateOutlet="treeTemplate; context: { nodes: nodes, level: 0 }"></ng-container>
      </ng-container>
      <div *ngIf="collapsed()" class="py-2">
        <!-- Collapsed view with just icons -->
        <div *ngFor="let node of nodes; trackBy: trackByFn" 
             class="flex justify-center p-2 hover:bg-gray-200 cursor-pointer" 
             [title]="node.name"
             (click)="toggleSidebar()">
          <ng-container [ngSwitch]="node.type">
            <svg *ngSwitchCase="'folder'" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
            </svg>
            <div *ngSwitchCase="'request'" [ngClass]="sidebarService.getMethodClass(node.method)" class="text-xs font-bold rounded px-1.5 py-0.5">
              {{node.method}}
            </div>
          </ng-container>
        </div>
      </div>
    </div>
    
    <!-- Add New Collection Button -->
    <div *ngIf="!collapsed()" class="border-t border-gray-200 p-2">
      <button class="w-full flex items-center justify-center p-2 bg-blue-50 hover:bg-blue-100 text-blue-600 rounded-md transition-colors"
              (click)="addNewCollection()">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
        </svg>
        <span>New Collection</span>
      </button>
    </div>
  </div>
  
  <!-- Resizable Handle -->
  <div *ngIf="!collapsed()" 
       class="resize-handle cursor-col-resize h-full w-1 bg-gray-300 hover:bg-blue-400 active:bg-blue-500"
       (mousedown)="startResize($event)">
  </div>
</div>

<!-- Hidden File Inputs for Import -->
<input 
  type="file" 
  #jsonFileInput 
  style="display: none" 
  accept=".json"
  (change)="importCollection($event)"
>

<input 
  type="file" 
  #openapiFileInput 
  style="display: none" 
  accept=".json,.yaml,.yml"
  (change)="importOpenAPI($event)"
>

<!-- Tree Node Template -->
<ng-template #treeTemplate let-nodes="nodes" let-level="level">
  <div cdkDropList (cdkDropListDropped)="drop($event)" class="w-full">
    <div *ngFor="let node of nodes; trackBy: trackByFn" 
         cdkDrag [cdkDragData]="node"
         class="node-container"
         [class.drag-placeholder]="dragPlaceholder">
      <!-- Node Item -->
      <div class="flex items-center cursor-pointer hover:bg-gray-200 pr-2 relative" 
           [style.paddingLeft.px]="level * 12 + 8"
           [cdkContextMenuTriggerFor]="nodeMenu"
           (contextmenu)="onContextMenu($event, node)">
        
        <!-- Expand/Collapse for folders -->
        <div *ngIf="node.type === 'folder'" class="w-5 h-5 flex items-center justify-center" (click)="toggleExpand(node, $event)">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 transition-transform duration-200"
               [class.rotate-90]="node.expanded" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </div>
        <div *ngIf="node.type !== 'folder'" class="w-5 h-5"></div>
        
        <!-- Icon based on type -->
        <div class="mr-2 flex items-center">
          <svg *ngIf="node.type === 'folder'" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  [attr.d]="node.expanded ? 'M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z' : 'M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z'" />
          </svg>
          <div *ngIf="node.type === 'request'" [ngClass]="sidebarService.getMethodClass(node.method)" class="text-xs font-bold rounded px-1.5 py-0.5">
            {{node.method}}
          </div>
        </div>
        
        <!-- Node Name -->
        <ng-container *ngIf="!node.editing; else editNameTemplate">
          <div class="flex-1 py-2 truncate">{{node.name}}</div>
        </ng-container>
        
        <!-- Edit Name Template -->
        <ng-template #editNameTemplate>
          <input 
            type="text" 
            class="flex-1 py-1 px-1 rounded border border-blue-400 focus:outline-none focus:ring-1 focus:ring-blue-500 text-sm" 
            [(ngModel)]="node.name"
            (keydown.enter)="finishRenaming(node)"
            (keydown.escape)="cancelRenaming(node)"
            (blur)="finishRenaming(node)"
            #renameInput
          >
        </ng-template>
        
        <!-- Context Menu Dots -->
        <button class="text-gray-400 hover:text-gray-700 opacity-0 group-hover:opacity-100 focus:opacity-100" 
                [cdkContextMenuTriggerFor]="nodeMenu"
                (click)="onContextMenu($event, node)">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
          </svg>
        </button>
      </div>
      
      <!-- New Item Input (when adding folder or request) -->
      <div *ngIf="node.newItem" 
           class="flex items-center pr-2" 
           [style.paddingLeft.px]="(level + 1) * 12 + 8">
        <div class="w-5 h-5"></div>
        <div class="mr-2">
          <svg *ngIf="node.newItem.type === 'folder'" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
          </svg>
          <select *ngIf="node.newItem.type === 'request'" 
                  class="text-xs font-bold rounded px-1 py-0.5"
                  [(ngModel)]="node.newItem.method"
                  [ngClass]="sidebarService.getMethodClass(node.newItem.method)">
            <option value="GET">GET</option>
            <option value="POST">POST</option>
            <option value="PUT">PUT</option>
            <option value="DELETE">DELETE</option>
          </select>
        </div>
        <input 
          type="text" 
          class="flex-1 py-1 px-1 rounded border border-blue-400 focus:outline-none focus:ring-1 focus:ring-blue-500 text-sm" 
          [(ngModel)]="node.newItem.name"
          (keydown.enter)="addNewItem(node)"
          (keydown.escape)="cancelAddingItem(node)"
          (blur)="addNewItem(node)"
          placeholder="{{node.newItem.type === 'folder' ? 'New Folder' : 'New Request'}}"
          #newItemInput
        >
      </div>
      
      <!-- Children (for folders) -->
      <div *ngIf="node.type === 'folder' && node.expanded" class="folder-children">
        <ng-container *ngIf="node.children && node.children.length">
          <ng-container *ngTemplateOutlet="treeTemplate; context: { nodes: node.children, level: level + 1 }"></ng-container>
        </ng-container>
      </div>
    </div>
  </div>
</ng-template>

<!-- Context Menu -->
<ng-template #nodeMenu>
  <div class="bg-white shadow-lg rounded-md py-1 border border-gray-200 w-40" cdkMenu>
    <button cdkMenuItem class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" 
            (click)="startRenaming(activeNode)">
      Rename
    </button>
    <button *ngIf="activeNode?.type === 'folder'" cdkMenuItem 
            class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" 
            (click)="startAddingItem(activeNode, 'folder')">
      Add Folder
    </button>
    <button *ngIf="activeNode?.type === 'folder'" cdkMenuItem 
            class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" 
            (click)="startAddingItem(activeNode, 'request')">
      Add Request
    </button>
    <button *ngIf="isTopLevelFolder(activeNode)" cdkMenuItem 
            class="w-full text-left px-4 py-2 text-sm text-green-600 hover:bg-gray-100" 
            (click)="exportSingleCollection(activeNode)">
      Export
    </button>
    <button cdkMenuItem class="w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100" 
            (click)="deleteNode(activeNode)">
      Delete
    </button>
  </div>
</ng-template>